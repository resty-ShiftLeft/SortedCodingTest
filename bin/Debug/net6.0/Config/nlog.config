<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
      internalLogFile="C:\Dev\RainfallAPI\Logs\internal-nlog-AspNetCore.log">

    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

    <!-- the targets to write to -->
    <targets async="true">
        <!-- File Target for Azure App Service log files directory of all log messages with basic details -->
        <target xsi:type="File" name="infowarnfile" fileName="${environment:HOME:cached=true}/logfiles/application/Nlog-API-InfoWarn-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

        <target xsi:type="File" name="tracedebugfile" fileName="${environment:HOME:cached=true}/logfiles/application/Nlog-API-TraceDebug-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

        <target xsi:type="File" name="errorfatalfile" fileName="${environment:HOME:cached=true}/logfiles/application/Nlog-API-ErrorFatal-${shortdate}.log"
        layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

        <!-- File Target for all log messages with basic details -->
        <target xsi:type="File" name="allfile" fileName="E:\Dev\Vision\Logs\nlog-AspNetCore-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

        <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
        <target xsi:type="File" name="ownFile-web" fileName="E:\Dev\Vision\Logs\nlog-AspNetCore-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|" />

        <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
        <target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />

        <target xsi:type="Console" name="simpleConsole" layout="${level:truncate=4}\|${message}${exception:format=tostring}" />


        <!-- Purpose built loggers -->
    </targets>

    <!-- Rules -->
    <rules>
        <!--Info - Warning level logs-->
        <logger name="*" minlevel="Info" maxlevel="Warn"  writeTo="infowarnfile" />

        <!--Trace - Debug level logs-->
        <logger name="*" minlevel="Trace" maxlevel="Debug" writeTo="tracedebugfile" />

        <!--Error - Fatal level logs-->

        <logger name="*" minlevel="Error" maxlevel="Fatal" writeTo="errorfatalfile" />

        <!-- Vision logs out to the console -->
        <logger name="Vision*" minlevel="Trace" writeTo="simpleConsole" />

        <!--All logs, including from Microsoft-->
        <logger name="*" minlevel="Trace" writeTo="allfile" />

        <!--Output hosting lifetime messages to console target for faster startup detection -->
        <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

        <!--Skip non-critical Microsoft logs and so log only own logs-->
        <logger name="Microsoft.*" maxlevel="Info" final="true" />
        <!-- BlackHole -->

        <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
    </rules>
</nlog>